// Pest grammar for HLHDL-like syntax

program = _{ SOI ~ ";"* ~ (statement ~ ";"+)* ~ EOI }
statement = _{expression}
expression = {
    assignment
    | identifier
    | value
    // like var1 + var2
}

assignment = _{ "let " ~ identifier ~ "=" ~ expression }
identifier = _{ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT)* }
operator = _{ "+" | "-" | "*" | "/" | "%" }
dyadic = _{ expression ~ operator ~ expression }
value = _{ ASCII_DIGIT+ }



WHITESPACE = _{ " " | "\t" | "\n" | "\r" }
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }


